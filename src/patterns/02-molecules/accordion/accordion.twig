{% spaceless %}
	{#
	* Renders the accordion component
	*
	* @param  {string}  component_class      The CSS class of this component
	* @param  {string}  version              Optional version. Uses a BEM modifier
	* @param  {string}  parent_class     	 CSS class of the parent component
	* @param  {boolean} add_class_on_anim    Adds a CSS class when user scrolls to this component. Used for animations
	* @param  {object}  item                 content object. Has at least a title and content
	* @param  {string}  extra_class          optional extra CSS class
	#}

	{% set component_class = "m-accordion" %}
	{% set version         = version      ? component_class ~ "--" ~ version | join("") : component_class ~ "--default" %}
	{% set parent          = parent_class ? parent_class    ~ "__" ~ component_class|replace({"m-" : ""}) | join("") %}

	<div class="{{ parent }} {{ component_class }} {{ version }} {{ extra_class }} {{ add_class_on_anim }}" data-module="showAccordion">
		{% for item in accordion_items %}
			<div class="{{ component_class }}__group wow {{ interval }}">
				<div class="{{ component_class }}__group-inner">
					{% include '01-atoms/content/title/title.twig' with {
						parent_class        : component_class,
						title               : item.title,
						h                   : "4",
						add_class_on_anim   : false
					} only %}

					{% include '01-atoms/content/content/content.twig' with {
						parent_class        : component_class,
						content             : item.content,
						add_class_on_anim   : false
					} only %}
				</div>

				<div class="{{ component_class }}__track">
					<div class="{{component_class}}__circle js-accordion">
						<span class="{{ component_class }}__control"></span>
					</div>
				</div>
			</div>
		{% endfor %}
	</div>
{% endspaceless %}
